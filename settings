public class SettingsActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_settings);
        Toolbar myToolbar = (Toolbar) findViewById(R.id.my_toolbar);
        setSupportActionBar(myToolbar);

        Button stats, themes;
        stats = (Button) findViewById(R.id.statsrecord);
        stats.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

            }
        });
        themes = (Button) findViewById(R.id.themes);
        themes.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

            }
        });

        SeekBar sbmvol, sbsfxvol;
        sbmvol = (SeekBar) findViewById(R.id.sbmvol);
        sbmvol.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
            @Override
            public void onProgressChanged(SeekBar seekBar, int i, boolean b) {
                PersistanceManager.audioPlayer.setVolume(i);
            }

            @Override
            public void onStartTrackingTouch(SeekBar seekBar) {

            }

            @Override
            public void onStopTrackingTouch(SeekBar seekBar) {

            }
        });
        sbsfxvol = (SeekBar) findViewById(R.id.sbsfxvol);
        sbsfxvol.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
            @Override
            public void onProgressChanged(SeekBar seekBar, int i, boolean b) {
                Booster.setVolume(i);
            }

            @Override
            public void onStartTrackingTouch(SeekBar seekBar) {

            }

            @Override
            public void onStopTrackingTouch(SeekBar seekBar) {

            }
        });

        ToggleButton tutOnOff = (ToggleButton) findViewById(R.id.tutOnOff);
        tutOnOff.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton compoundButton, boolean b) {
                PersistanceManager.tutorials = b;
                LoginActivity.store();
            }
        });

    }

    @Override

    public boolean onCreateOptionsMenu(Menu menu) {

        MenuInflater inflater = getMenuInflater();

        inflater.inflate(R.menu.settings, menu);

        return true;

    }

    @Override
    public boolean onOptionsItemSelected(MenuItem menuItem){
        switch(menuItem.getItemId()){
            case R.id.back:
                onBackPressed();
                return true;

            default:
                return super.onOptionsItemSelected(menuItem);
        }

    }

}

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    tools:context="com.madesty.madestymwesogame.SettingsActivity"
    android:orientation="vertical">

    <Button
        android:layout_width="300dp"
        android:layout_height="wrap_content"
        android:text="@string/cumstats"
        android:id="@+id/statsrecord"
        android:layout_gravity="center_horizontal"
        android:layout_marginBottom="10dp"
        android:background="@drawable/allbuttons" />

    <Button
        android:layout_width="300dp"
        android:layout_height="wrap_content"
        android:text="@string/themes"
        android:id="@+id/themes"
        android:layout_gravity="center_horizontal"
        android:layout_marginBottom="10dp"
        android:background="@drawable/allbuttons" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textAppearance="?android:attr/textAppearanceLarge"
        android:text="@string/musicvol"
        android:id="@+id/musicvol" />

    <SeekBar
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/sbmvol"
        android:layout_gravity="center_horizontal"
        android:layout_marginBottom="10dp"
        android:max="100"
        android:indeterminate="false" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/sfxvol"
        android:id="@+id/sfxvol"
        android:textAppearance="@android:style/TextAppearance.Material.Large" />

    <SeekBar
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/sbsfxvol"
        android:layout_gravity="center_horizontal"
        android:layout_marginBottom="10dp"
        android:max="100"
        android:indeterminate="false" />

    <LinearLayout
        android:orientation="horizontal"
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <TextView
            android:text="@string/tutorial"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/tutorials"
            android:layout_weight="7"
            android:textAppearance="@android:style/TextAppearance.Material.Large" />

        <ToggleButton
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/tutOnOff"
            android:layout_weight="1" />
    </LinearLayout>

</LinearLayout>
